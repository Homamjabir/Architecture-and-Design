[{"C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\index.js":"1","C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\App.js":"2","C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\login.js":"3","C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\footer.js":"4","C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\header.js":"5","C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\home.js":"6","C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\registration.js":"7","C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\api.js":"8","C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\application.js":"9","C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\i18n.js":"10","C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\locales\\en\\translation.js":"11","C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\locales\\sv\\translation.js":"12","C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\incomplete.js":"13"},{"size":396,"mtime":1614889245133,"results":"14","hashOfConfig":"15"},{"size":1351,"mtime":1615368851001,"results":"16","hashOfConfig":"15"},{"size":4158,"mtime":1615369146463,"results":"17","hashOfConfig":"15"},{"size":395,"mtime":1614340918344,"results":"18","hashOfConfig":"15"},{"size":1915,"mtime":1614899060128,"results":"19","hashOfConfig":"15"},{"size":745,"mtime":1614898813248,"results":"20","hashOfConfig":"15"},{"size":6405,"mtime":1615234668722,"results":"21","hashOfConfig":"15"},{"size":772,"mtime":1615370854854,"results":"22","hashOfConfig":"15"},{"size":353,"mtime":1614787313909,"results":"23","hashOfConfig":"15"},{"size":481,"mtime":1614889218484,"results":"24","hashOfConfig":"15"},{"size":1444,"mtime":1615234299649,"results":"25","hashOfConfig":"15"},{"size":1482,"mtime":1615234324603,"results":"26","hashOfConfig":"15"},{"size":6110,"mtime":1615373146000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"15r7rfj",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\index.js",[],["61","62"],"C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\App.js",["63"],"import React, { Component, useState } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Home from \"./components/home\";\r\nimport Login from \"./components/login\"\r\nimport Registration from \"./components/registration\";\r\nimport Application from \"./components/application\";\r\nimport Incomplete from \"./components/incomplete\";\r\nimport Header from \"./components/header\";\r\nimport Footer from \"./components/footer\"\r\nimport i18n from \"i18next\";\r\n\r\nexport default function App() {\r\n\r\n\tconst [sessionToken, setSessionToken] = useState(null);\r\n\tvar userLang = navigator.language || navigator.userLanguage; \r\n\ti18n.changeLanguage(userLang);\r\n \r\n    return (\r\n        <div className=\"App\">\r\n\t\t\t\r\n\t\t\t<header className=\"App-header\">\r\n\t\t\t\t<Header sessionToken={sessionToken}/>\r\n\t\t\t</header>\r\n\r\n          \t<Route\r\n\t\t\t\texact path=\"/\"\r\n\t\t\t\trender={() => <Home/>}\r\n\t\t\t/>\r\n\t\t\t<Route\r\n\t\t\t\texact path=\"/login\"\r\n\t\t\t\trender={() => <Login setSessionToken={setSessionToken}/>}\r\n\t\t\t/>\r\n\t\t\t<Route\r\n\t\t\t\texact path=\"/registration\"\r\n\t\t\t\trender={() => <Registration/>}\r\n\t\t\t/>\r\n\t\t\t<Route\r\n\t\t\t\texact path=\"/application\"\r\n\t\t\t\trender={() => <Application/>}\r\n\t\t\t/>\r\n\t\t\t<Route\r\n\t\t\t\texact path=\"/incomplete\"\r\n\t\t\t\trender={() => <Incomplete/>}\r\n\t\t\t/>\r\n\r\n\t\t\t<footer>\r\n\t\t\t\t<Footer />\r\n\t\t\t</footer>\r\n        </div>\r\n    );\r\n    \r\n}\r\n \r\n\r\n","C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\login.js",["64","65"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Col from 'react-bootstrap/Form'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport  ApiCall  from \"./api\"\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport \"./css/login.css\"\r\n\r\nconst Login = ({setSessionToken}) => {\r\n  const { t, i18n } = useTranslation();\r\n  const history = useHistory();\r\n\r\n  const [initialValues, setInitialValues] = useState({\r\n    email: '',\r\n    username: '',\r\n    password: ''\r\n  });\r\n\r\n  /**\r\n   * Sets the new value\r\n   * @param {JSON} event \r\n   */\r\n  const onChange = event => {\r\n    setInitialValues(prevState =>  ({\r\n      ...prevState,\r\n      [event.target.name] : event.target.value\r\n    }))\r\n  };  \r\n\r\n  /**\r\n   * Called when user submits\r\n   * @param {JSON} values \r\n   */\r\n  const onSubmit = (values) => {\r\n    \r\n    if(validateEmail(values.username)) {\r\n      values.email = values.username;\r\n      values.username = '';\r\n    }\r\n    else {\r\n      values.email = '';\r\n    }\r\n    console.log(values)\r\n\r\n    ApiCall(\"POST\", \"api/applicant/login\", values, null).then(response => {\r\n      alert(\"login succesfull\");\r\n      console.log(response)\r\n      \r\n    }).catch(error => {\r\n      console.log(error.accessToken)\r\n      if(error.accessToken !== undefined)\r\n        history.push({pathname: \"/incomplete\", state: { \"username\": values.username, \"email\": values.email, \"password\": values.password, \"accessToken\": error.accessToken}})\r\n      else\r\n        alert(\"invalid username or password\");\r\n    })\r\n    \r\n  }\r\n\r\n  function validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  \r\n  const schema = yup.object().shape({\r\n    username: yup.string().required(t(\"validationUsernameOrPassword\")),\r\n    password: yup.string().required(t(\"validationPassword\")),\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"loginContainer\">\r\n\r\n      <div className=\"loginFormContainer\">\r\n        <Formik\r\n          enableReinitialize={true}\r\n          validationSchema={schema}\r\n          onSubmit={onSubmit}\r\n          onChange={onChange}\r\n          initialValues={initialValues}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            errors,\r\n          }) => (\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n\r\n              <Form.Row>\r\n\r\n                <Form.Group className=\"mr-3\" as={Col} md=\"6\" >\r\n                  <Form.Label>{t(\"logUsernameOrEmail\")}</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    \r\n                    name=\"username\"\r\n                    defaultValue={initialValues.username}\r\n                    onChange={onChange}\r\n                    isInvalid={!!errors.username}\r\n                  />\r\n\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.username}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group as={Col} md=\"6\" >\r\n                  <Form.Label>{t(\"regPassword\")}</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    \r\n                    name=\"password\"\r\n                    defaultValue={initialValues.password}\r\n                    onChange={onChange}\r\n                    isInvalid={!!errors.password}\r\n                  />\r\n\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.password}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n              </Form.Row>\r\n\r\n              <Button type=\"submit\">{t(\"logButton\")}</Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n      <p>\r\n        {t(\"logText.text1\")} <Nav.Link href=\"/registration\"><strong>{t(\"logText.text2\")}</strong></Nav.Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Login;","C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\footer.js",[],"C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\header.js",["66","67","68","69"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport i18n from \"i18next\";\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport  ApiCall  from \"./api\"\r\nimport \"./css/header.css\"\r\n\r\nvar count = 1;\r\nconst Header = ({sessionToken}) =>  {\r\n        const history = useHistory();\r\n\r\n        \r\n        const { t, i18n } = useTranslation();\r\n\r\n        const onClick = () => {\r\n            console.log(count)\r\n            if(count % 2 === 0)\r\n                i18n.changeLanguage(\"sv\");\r\n            else\r\n                i18n.changeLanguage(\"en\")\r\n            count++;\r\n            console.log(count)\r\n        }\r\n\r\n        if(window.location.pathname === '/')\r\n            return null;\r\n        else \r\n            return (\r\n                <div className = \"headerContainer\">\r\n                    <Navbar className=\"navbar\" variant=\"dark\" expand=\"lg\">\r\n                        <Navbar.Brand href=\"#home\">{t(\"headerText\")}</Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto\">\r\n                                <Nav.Link href=\"/\">{t(\"headerHome\")}</Nav.Link>\r\n                                <Nav.Link href=\"/login\">{t(\"headerLogin\")}</Nav.Link>\r\n                                <Nav.Link href=\"/registration\">{t(\"headerRegistration\")}</Nav.Link>\r\n                                <Nav.Link >{t(\"headerApplication\")}</Nav.Link>\r\n                                <Nav.Link onClick={onClick}>{t(\"headerChangeLanguage\")}</Nav.Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                </div>\r\n            );\r\n      \r\n    \r\n  }\r\n \r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\home.js",["70"],"import React from \"react\";\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { useTranslation } from 'react-i18next';\r\nimport \"./css/home.css\"\r\n\r\nconst Home = () => {\r\n  const { t, i18n } = useTranslation();\r\n\r\n\r\n\r\n  return (\r\n    <div className = \"homePageContainer\">\r\n      <div className = \"videoContainer\">\r\n          <video autoPlay loop muted>\r\n            <source src=\"//videos.ctfassets.net/ds6dz7ilx8up/3zsCYZmfrLkqNFtvnJeVBq/66aa467c8617368c9c0390c17be0463a/Monster_tom_web.mp4\" type=\"video/mp4\"></source>\r\n          </video>\r\n\r\n          <h1>{t(\"homePageTitle\")}</h1>\r\n\r\n          <Nav.Link href=\"/registration\"><button type=\"button\">{t(\"homePageButton\")}</button></Nav.Link>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Home;","C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\registration.js",["71","72"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Col from 'react-bootstrap/Form'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport  ApiCall  from \"./api\"\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport \"./css/registration.css\"\r\n\r\n\r\nconst Registration = () => {\r\n  const history = useHistory();\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const [initialValues, setInitialValues] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    dob: '',\r\n    username: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  /**\r\n   * Uppdates the state that has changed\r\n   * @param {event} event \r\n   */\r\n  const onChange = (event) => {\r\n    setInitialValues(prevState =>  ({\r\n      ...prevState,\r\n      [event.target.name] : event.target.value\r\n    }))\r\n  };  \r\n\r\n  /**\r\n   * Makes a signup request with the recevied values\r\n   * and displays the result to the user in an alert\r\n   * @param {JSON} values \r\n   */\r\n  const onSubmit = (values) => {\r\n    ApiCall(\"POST\", \"api/applicant/signup\", values, null).then(response => {\r\n      history.push('/login')\r\n      //alert(\"registration succesfull\");\r\n    }).catch(error => {\r\n      alert(error.message);\r\n    })\r\n \r\n  }\r\n\r\n  const schema = yup.object().shape({\r\n    firstName: yup.string().required(t(\"validationFirstName\")),\r\n    lastName: yup.string().required(t(\"validationLastName\")),\r\n    dob: yup.number(\"Enter a number\").required(t(\"validationDOB\")).positive(\"Positive number\").integer(\"Number\")/*.test('len', t(\"validationDOBLength\"), val => val.length === 12)*/,\r\n    username: yup.string().required(t(\"validationUsername\")),\r\n    email: yup.string().email(t(\"validationEmail.inv\")).required(t(\"validationEmail.req\")),\r\n    password: yup.string().required(t(\"validationPassword\")),\r\n  });\r\n  \r\n  return (\r\n    <div className=\"registrationContainer\">\r\n      <div className=\"registrationFormContainer\">\r\n        <Formik\r\n          enableReinitialize={true}\r\n          validationSchema={schema}\r\n          onSubmit={onSubmit}\r\n          onChange={onChange}\r\n          initialValues={initialValues}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            errors,\r\n            }) => (\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n\r\n              <Form.Row>\r\n\r\n              <Form.Group className=\"mr-3\" as={Col} md=\"6\" >\r\n                  <Form.Label>{t(\"regFirstName\")}</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    \r\n                    name=\"firstName\"\r\n                    defaultValue={initialValues.firstName}\r\n                    onChange={onChange}\r\n                    isInvalid={errors.firstName}\r\n                  />\r\n\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md=\"6\" >\r\n                  <Form.Label>{t(\"regLastName\")}</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    \r\n                    name=\"lastName\"\r\n                    defaultValue={initialValues.lastName}\r\n                    onChange={onChange}\r\n                    isInvalid={errors.lastName}\r\n                  />\r\n\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n              </Form.Row>\r\n\r\n\r\n              <Form.Row>\r\n\r\n                <Form.Group className=\"mr-3\" as={Col} md=\"6\" >\r\n                  <Form.Label>{t(\"regDOB\")}</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    \r\n                    name=\"dob\"\r\n                    defaultValue={initialValues.dob}\r\n                    onChange={onChange}\r\n                    isInvalid={!!errors.dob}\r\n                  />\r\n\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.dob}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md=\"6\" >\r\n                  <Form.Label>{t(\"regUsername\")}</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    \r\n                    name=\"username\"\r\n                    defaultValue={initialValues.username}\r\n                    onChange={onChange}\r\n                    isInvalid={!!errors.username}\r\n                  />\r\n\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.username}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n\r\n                <Form.Group className=\"mr-3\" as={Col} md=\"6\" >\r\n                  <Form.Label>{t(\"regEmail\")}</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    \r\n                    name=\"email\"\r\n                    defaultValue={initialValues.email}\r\n                    onChange={onChange}\r\n                    isInvalid={!!errors.email}\r\n                  />\r\n\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.email}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md=\"6\" >\r\n                  <Form.Label>{t(\"regPassword\")}</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    \r\n                    name=\"password\"\r\n                    defaultValue={initialValues.password}\r\n                    onChange={onChange}\r\n                    isInvalid={!!errors.password}\r\n                  />\r\n\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.password}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n              </Form.Row>\r\n\r\n              <Button type=\"submit\">{t(\"regButton\")}</Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n      <p>\r\n        {t(\"regText.text1\")}<Nav.Link href=\"/login\"><strong>{t(\"regText.text2\")}</strong></Nav.Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Registration;","C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\api.js",[],"C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\application.js",[],"C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\i18n.js",["73"],"import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\"\r\n\r\ni18n\r\n  .use(initReactI18next)\r\n  .init( {\r\n    resources: {\r\n      en: {translation: \"../public/locales/translation.js\"},\r\n      sv: {translation: \"../public/locales/translation.js\"},\r\n    },\r\n    lng: \"en\",\r\n    fallbackLng: \"en\",\r\n    interpolation: {escapeValue: false},\r\n  });\r\nexport default i18n;","C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\locales\\en\\translation.js",[],"C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\locales\\sv\\translation.js",[],"C:\\Users\\Homam\\Documents\\Skola\\Github\\Architecture-and-Design\\src\\components\\incomplete.js",["74","75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"80","severity":1,"message":"84","line":10,"column":10,"nodeType":"82","messageId":"83","endLine":10,"endColumn":15},{"ruleId":"80","severity":1,"message":"85","line":14,"column":14,"nodeType":"82","messageId":"83","endLine":14,"endColumn":18},{"ruleId":"80","severity":1,"message":"86","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":12},{"ruleId":"80","severity":1,"message":"84","line":6,"column":10,"nodeType":"82","messageId":"83","endLine":6,"endColumn":15},{"ruleId":"80","severity":1,"message":"87","line":7,"column":9,"nodeType":"82","messageId":"83","endLine":7,"endColumn":16},{"ruleId":"80","severity":1,"message":"88","line":12,"column":15,"nodeType":"82","messageId":"83","endLine":12,"endColumn":22},{"ruleId":"80","severity":1,"message":"85","line":7,"column":14,"nodeType":"82","messageId":"83","endLine":7,"endColumn":18},{"ruleId":"80","severity":1,"message":"84","line":10,"column":10,"nodeType":"82","messageId":"83","endLine":10,"endColumn":15},{"ruleId":"80","severity":1,"message":"85","line":16,"column":14,"nodeType":"82","messageId":"83","endLine":16,"endColumn":18},{"ruleId":"80","severity":1,"message":"89","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":24},{"ruleId":"80","severity":1,"message":"85","line":22,"column":14,"nodeType":"82","messageId":"83","endLine":22,"endColumn":18},{"ruleId":"90","severity":1,"message":"91","line":28,"column":5,"nodeType":"92","endLine":28,"endColumn":7,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Trans' is defined but never used.","'i18n' is assigned a value but never used.","'i18n' is defined but never used.","'ApiCall' is defined but never used.","'history' is assigned a value but never used.","'LanguageDetector' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location.state' and 'whatToShow'. Either include them or remove the dependency array.","ArrayExpression",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [location.state, whatToShow]",{"range":"99","text":"100"},[815,817],"[location.state, whatToShow]"]