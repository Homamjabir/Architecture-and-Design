[{"/mnt/c/users/john/atomprojects/IV1201/Architecture-and-Design/src/index.js":"1","/mnt/c/users/john/atomprojects/IV1201/Architecture-and-Design/src/App.js":"2","/mnt/c/users/john/atomprojects/IV1201/Architecture-and-Design/src/components/login.js":"3","/mnt/c/users/john/atomprojects/IV1201/Architecture-and-Design/src/components/registration.js":"4","/mnt/c/users/john/atomprojects/IV1201/Architecture-and-Design/src/components/footer.js":"5","/mnt/c/users/john/atomprojects/IV1201/Architecture-and-Design/src/components/header.js":"6","/mnt/c/users/john/atomprojects/IV1201/Architecture-and-Design/src/components/home.js":"7","/mnt/c/users/john/atomprojects/IV1201/Architecture-and-Design/src/components/api.js":"8"},{"size":275,"mtime":1614677487938,"results":"9","hashOfConfig":"10"},{"size":863,"mtime":1614677500799,"results":"11","hashOfConfig":"10"},{"size":3003,"mtime":1614677500802,"results":"12","hashOfConfig":"10"},{"size":6168,"mtime":1614677500803,"results":"13","hashOfConfig":"10"},{"size":395,"mtime":1614677487874,"results":"14","hashOfConfig":"10"},{"size":1226,"mtime":1614677500801,"results":"15","hashOfConfig":"10"},{"size":663,"mtime":1614677487876,"results":"16","hashOfConfig":"10"},{"size":778,"mtime":1614677500800,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"5jzse5",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/users/john/atomprojects/IV1201/Architecture-and-Design/src/index.js",[],["36","37"],"/mnt/c/users/john/atomprojects/IV1201/Architecture-and-Design/src/App.js",[],"/mnt/c/users/john/atomprojects/IV1201/Architecture-and-Design/src/components/login.js",[],"/mnt/c/users/john/atomprojects/IV1201/Architecture-and-Design/src/components/registration.js",["38"],"import React, { useState } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Col from 'react-bootstrap/Form'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport  ApiCall  from \"./api\"\r\nimport \"./css/registration.css\"\r\n\r\n\r\nconst Registration = () => {\r\n\r\n  const [initialValues, setInitialValues] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    dob: '',\r\n    username: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  /**\r\n   * Uppdates the state that has changed\r\n   * @param {event} event \r\n   */\r\n  const onChange = (event) => {\r\n    setInitialValues(prevState =>  ({\r\n      ...prevState,\r\n      [event.target.name] : event.target.value\r\n    }))\r\n  };  \r\n\r\n  const reset = () => {\r\n    setInitialValues(prevState => ({\r\n      ...prevState,\r\n      firstName: '',\r\n      lastName: '',\r\n      dob: '',\r\n      username: '',\r\n      email: '',\r\n      password: ''\r\n    }))\r\n  }\r\n\r\n  /**\r\n   * Makes a signup request with the recevied values\r\n   * and displays the result to the user in an alert\r\n   * @param {JSON} values \r\n   */\r\n  const onSubmit = (values) => {\r\n    ApiCall(\"POST\", \"api/applicant/signup\", values).then(response => {\r\n      alert(\"registration succesfull\");\r\n    }).catch(error => {\r\n      alert(error.message);\r\n    })\r\n \r\n  }\r\n\r\n  const schema = yup.object().shape({\r\n    firstName: yup.string().required(),\r\n    lastName: yup.string().required(),\r\n    dob: yup.string().required(),\r\n    username: yup.string().required(),\r\n    email: yup.string().email('Invalid email').required('Required'),\r\n    password: yup.string().required(),\r\n  });\r\n  \r\n  return (\r\n    <div className=\"registrationContainer\">\r\n      <div className=\"registrationFormContainer\">\r\n        <Formik\r\n          enableReinitialize={true}\r\n          validationSchema={schema}\r\n          onSubmit={onSubmit}\r\n          onChange={onChange}\r\n          initialValues={initialValues}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            errors,\r\n            }) => (\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n\r\n              <Form.Row>\r\n\r\n              <Form.Group as={Col} md=\"6\" >\r\n                  <Form.Label>First name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    name=\"firstName\"\r\n                    defaultValue={initialValues.firstName}\r\n                    onChange={onChange}\r\n                    isInvalid={errors.firstName}\r\n                  />\r\n\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md=\"6\" >\r\n                  <Form.Label>Last name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    defaultValue={initialValues.lastName}\r\n                    onChange={onChange}\r\n                    isInvalid={errors.lastName}\r\n                  />\r\n\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n              </Form.Row>\r\n\r\n\r\n              <Form.Row>\r\n\r\n                <Form.Group as={Col} md=\"6\" >\r\n                  <Form.Label>Date of Birth</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Date of Birth\"\r\n                    name=\"dob\"\r\n                    defaultValue={initialValues.dob}\r\n                    onChange={onChange}\r\n                    isInvalid={!!errors.dob}\r\n                  />\r\n\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.dob}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md=\"6\" >\r\n                  <Form.Label>Username</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    name=\"username\"\r\n                    defaultValue={initialValues.username}\r\n                    onChange={onChange}\r\n                    isInvalid={!!errors.username}\r\n                  />\r\n\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.username}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n\r\n                <Form.Group as={Col} md=\"6\" >\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    defaultValue={initialValues.email}\r\n                    onChange={onChange}\r\n                    isInvalid={!!errors.email}\r\n                  />\r\n\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.email}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md=\"6\" >\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    defaultValue={initialValues.password}\r\n                    onChange={onChange}\r\n                    isInvalid={!!errors.password}\r\n                  />\r\n\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.password}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n              </Form.Row>\r\n\r\n              <Button type=\"submit\">Sign up</Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n      <p>\r\n        Already have an account? <Nav.Link href=\"/login\"><strong>Log in here</strong></Nav.Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Registration;","/mnt/c/users/john/atomprojects/IV1201/Architecture-and-Design/src/components/footer.js",[],"/mnt/c/users/john/atomprojects/IV1201/Architecture-and-Design/src/components/header.js",[],"/mnt/c/users/john/atomprojects/IV1201/Architecture-and-Design/src/components/home.js",[],"/mnt/c/users/john/atomprojects/IV1201/Architecture-and-Design/src/components/api.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":34,"column":9,"nodeType":"45","messageId":"46","endLine":34,"endColumn":14},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'reset' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]